"""
build the following table in Big Query. You don't have to create the table, just write the code in this file
if you want, you can also create it in a dataset of your name in Big Query - like AMAURY.product_summary
"""

"""
the table must have the following columns:

-- product identifiers and basic attributes
product_id: unique identifier for each product
product_category_name: category the product belongs to
product_weight_g: weight of the product in grams
product_length_cm: length of the product in centimeters
product_height_cm: height of the product in centimeters
product_width_cm: width of the product in centimeters
product_volume_cm3: volume of the product in cubic centimeters
product_photos_qty: number of photos the product has in the catalog

-- sales metrics
total_orders: total number of orders containing this product
total_units_sold: total number of units sold for this product
first_order_date: date of the first order for this product
last_order_date: date of the most recent order for this product
product_lifetime_days: number of days between first and last order
total_revenue: total revenue generated by this product
avg_price: average selling price of the product
total_freight_value: total shipping costs for this product

-- performance metrics
sales_velocity: average number of units sold per day
daily_revenue: average revenue generated per day
days_since_last_order: number of days since the product was last ordered
recent_vs_overall_price_trend: percentage change in recent prices compared to overall average

-- sales trends
best_selling_month: month with highest sales for this product
worst_selling_month: month with lowest sales for this product
avg_monthly_units: average number of units sold per month
sales_volatility: measure of sales variation over time
max_monthly_growth: maximum month-over-month growth rate
min_monthly_growth: minimum month-over-month growth rate

-- category performance
category_sales_rank: rank of the product within its category by sales volume
category_revenue_rank: rank of the product within its category by revenue
category_sales_percentile: percentile rank within category by sales
category_revenue_percentile: percentile rank within category by revenue
category_size: total number of products in the same category

-- seller metrics
unique_sellers_count: number of different sellers offering this product
seller_concentration_index: measure of how concentrated sales are among sellers
top_seller_id: ID of the seller with the most sales for this product
top_seller_units: number of units sold by the top seller
top_seller_share: percentage of total units sold by the top seller

-- customer demographics
unique_customers: number of distinct customers who purchased this product
customer_states_count: number of different states where customers are located
top_customer_state: state with the most customers for this product
repeat_purchase_rate: percentage of customers who purchased the product more than once
new_customer_percent: percentage of orders from first-time customers

-- review metrics
total_reviews: total number of reviews received
avg_review_score: average review score
five_star_percent: percentage of reviews with 5-star rating
one_star_percent: percentage of reviews with 1-star rating
product_sentiment: sentiment category based on review scores (e.g., positive, neutral, negative)
review_rate: percentage of orders that received a review
avg_days_to_review: average time between purchase and first review by order
comment_rate: percentage of reviews with written comments

-- pricing analysis
min_price: minimum recorded price for the product
max_price: maximum recorded price for the product
price_per_kg: price per kilogram (value density)rs
relative_category_price: product price as a percentage of category average

-- delivery performance
avg_delivery_time: average time from order to delivery
avg_delivery_vs_estimated: average difference between actual and estimated delivery
on_time_delivery_rate: percentage of orders delivered on time
cancellation_rate: percentage of orders that were canceled

-- time metrics
etl_timestamp: timestamp when the data was last processed

"""